cout << "Usage:" << endl;
cout << "  alice2 ..." << endl;
cout << "  where ... indicates any combination of the below optional parameters." << endl;
cout << "" << endl;
cout << "  examples:" << endl;
cout << "    alice2 -in wmap_ilc_3yr_v2_r6_sim.fits -nside 512 -ell 300 -xsz 800 -out test" << endl;
cout << "    alice2 -in wmap_ilc_3yr_v2_r6_sim.fits -nside 512 -ell 300 -xsz 800 -out test_sos -sos" << endl;
cout << "    alice2 -in wmap_ilc_3yr_v2_r6_sim.fits -nside 512 -ell 300 -xsz 500 -out test_orth -orth 1.0" << endl;
cout << "" << endl;
cout << "  [-in <fits file>] fits file contains the Q and U polarization" << endl;
cout << "  components in the second and third columns." << endl;
cout << "" << endl;
cout << "  [-temperature <fits file>] an optional fits file containing" << endl;
cout << "  temperature data, if different temperature than that in the above" << endl;
cout << "  file is desired" << endl;
cout << "" << endl;
cout << "  [-out <string>] string used as a prefix for output files " << endl;
cout << "" << endl;
cout << "  [-texture <fits file>] optional input background texture" << endl;
cout << "" << endl;
cout << "  [-nside <int>] nside of the background texture generated" << endl;
cout << "" << endl;
cout << "  [-ell <int>] ell value at which background texture has power" << endl;
cout << "" << endl;
cout << "  [-xsz <int>] x size: width of output images" << endl;
cout << "" << endl;
cout << "  [-flat] use a flat kernel for convolution, instead of a sinusoidal" << endl;
cout << "  one." << endl;
cout << "" << endl;
cout << "  [-steps <int>] number of steps to use for each line of the convolution" << endl;
cout << "" << endl;
cout << "  [-step_arcmin <float>] arcminutes for each step in the convoloution" << endl;
cout << "" << endl;
cout << "  [-threshold] " << endl;
cout << "" << endl;
cout << "  [-orth <float>] orthogonal projection.  <float> should be between 0.0 and 1.0;" << endl;
cout << "  it determines the zoom." << endl;
cout << "" << endl;
cout << "  [-alpha <float>] first euler angle" << endl;
cout << "" << endl;
cout << "  [-beta <float>] second euler angle" << endl;
cout << "" << endl;
cout << "  [-gamma <float>] third euler angle" << endl;
cout << "" << endl;
cout << "  [-col <int>] color table index" << endl;
cout << "" << endl;
cout << "  [-bar] plot a color bar at the bottom of the graphic" << endl;
cout << "" << endl;
cout << "  [-title <string>] title (in quotes) for the plot" << endl;
cout << "" << endl;
cout << "  [-fitsout <fits file>] output fits file that contains a texture.  No" << endl;
cout << "  graphic is plotted." << endl;
cout << "" << endl;
cout << "  [-texture2 <fits file>] a second texture, for interpolation" << endl;
cout << "" << endl;
cout << "  [-frames <int>] number of frames used in interpolation" << endl;
cout << "" << endl;
cout << "  [-sos] Science on a Sphere projection" << endl;
cout << "" << endl;
cout << "  [-min <float>] minimum value for the temperature scale" << endl;
cout << "" << endl;
cout << "  [-max <float>] maximum value for the temperature scale" << endl;
cout << "" << endl;
cout << "  [-polmin <float>] minimum value for the polarization magnitude " << endl;
cout << "" << endl;
cout << "  [-polmax <float>] maximum value for the polarization magnitude" << endl;
